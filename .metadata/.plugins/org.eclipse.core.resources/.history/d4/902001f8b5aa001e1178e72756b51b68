package ybsGroup.kuaforRandevuSistemi.business.concretes;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import lombok.AllArgsConstructor;
import ybsGroup.kuaforRandevuSistemi.business.abstracts.EmployeeService;
import ybsGroup.kuaforRandevuSistemi.business.requests.employee.CreateEmployeeRequest;
import ybsGroup.kuaforRandevuSistemi.core.utilities.mappers.ModelMapperService;
import ybsGroup.kuaforRandevuSistemi.dataAccess.abstracts.AppointmentRepository;
import ybsGroup.kuaforRandevuSistemi.dataAccess.abstracts.EmployeeRepository;
import ybsGroup.kuaforRandevuSistemi.entities.concretes.Appointment;
import ybsGroup.kuaforRandevuSistemi.entities.concretes.Employee;

@Service
@AllArgsConstructor
public class EmployeeManager implements EmployeeService {
	
	private final EmployeeRepository employeeRepository;
	private AppointmentRepository appointmentRepository;
	private ModelMapperService modelMapperService;
	
	@Override
	public void add(CreateEmployeeRequest createEmployeeRequest) {
		 Employee employee = modelMapperService.forRequest().map(createEmployeeRequest, Employee.class);

		    // Appointment ile ili≈ükili verileri manuel olarak ayarla
		    if (createEmployeeRequest.getAppointmentIds() != null) {
		        List<Appointment> appointments = createEmployeeRequest.getAppointmentIds().stream()
		            .map(id -> appointmentRepository.findById(id)
		                .orElseThrow(() -> new RuntimeException("Appointment not found")))
		            .collect(Collectors.toList());

		        employee.setAppointments(appointments);
		    }

		    employeeRepository.save(employee);
		 
	}

}
